name: NceaBot

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write  # Allow workflow to push tags and create releases
  issues: read

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      name: Checkout repository
      with:
        fetch-depth: 0  # Ensures all files are fetched
    - name: Debug File Structure
      run: |
        echo "Current Directory: $(pwd)"
        ls -R  # List all files recursively to confirm the presence of main.py
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        brew install xquartz
        python -m pip install --upgrade pip
        pip install pyinstaller kivy selenium webdriver-manager google-generativeai
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed --name NceaBot main.py  # Make sure this is the correct path
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: NceaBot-MacOS
        path: dist/main.py
    - name: Create GitHub Tag
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        # Check if the tag exists, if it does, delete it
        if git rev-parse "v${{ github.run_number }}" >/dev/null 2>&1; then
          git tag -d "v${{ github.run_number }}"
          git push --delete origin "v${{ github.run_number }}"
        fi
        # Create the new tag
        git tag -a "v${{ github.run_number }}" -m "Release version ${{ github.run_number }}"
        git push origin "v${{ github.run_number }}"  # Push the new tag to remote
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release and Upload App
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ github.run_number }}"  # Set the tag for the release
        release_name: "Release v${{ github.run_number }}"  # Set the release name
        files: dist/main.py  # Specify the correct path to your app bundle or zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

